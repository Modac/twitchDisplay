# external_components:
#   # use rtttl and dfplayer from ESPHome's dev branch in GitHub
#   - source:
#       type: git
#       url: https://github.com/esphome/esphome
#       ref: dev
#     components: [ ili9xxx ]

esphome:
  name: twitchdisplay

esp32:
  board: seeed_xiao_esp32c3
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
#api:
#  password: ""

ota:
  - platform: esphome
    password: ""

wifi:
  ssid: "::1"
  password: !secret home_wifi_pw

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Twitchdisplay Fallback Hotspot"
    password: "faw6DbuhT4m5"

captive_portal:

web_server:

# Define a PWM output on the ESP32
output:
  - platform: ledc
    pin: GPIO0
    id: backlight_pwm

# Define a monochromatic, dimmable light for the backlight
light:
  - platform: monochromatic
    output: backlight_pwm
    name: "Display Backlight"
    id: back_light
    restore_mode: ALWAYS_ON

spi:
  clk_pin: GPIO4
  mosi_pin: GPIO6
  miso_pin: GPIO5

# Example minimal configuration entry
display:
  - platform: ili9xxx
    model: ST7789V
    dc_pin: GPIO1
    reset_pin: GPIO10
    cs_pin: GPIO7
    transform:
      swap_xy: true
      mirror_x: true
    dimensions:
      height: 170
      offset_height: 35
      width: 320
    # dimensions:
    #   height: 320
    #   width: 170
    #   offset_width: 35
    # color_palette: 8BIT
    invert_colors: true
    #show_test_card: true
    lambda: |-
      it.strftime(10, 10, id(roboto_20),Color(0,0,255), "%c", id(sntp_time).now());
    
time:
  - platform: sntp
    id: sntp_time
    timezone: Europe/Berlin

# Various ways to configure fonts
font:
    # gfonts://family[@weight]
  - file: "gfonts://Roboto"
    id: roboto_20
    size: 20